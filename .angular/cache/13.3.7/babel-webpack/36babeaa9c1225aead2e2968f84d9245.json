{"ast":null,"code":"import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BrowserModule, Title } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MissingTranslationHandler, TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { ResolutionService } from './fwk/service/resolution.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AppMissingTranslationHandler } from './fwk/i18n/i18n.module';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { GithubUserProjectsService } from './services/github-user-projects.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\"; // AoT requires an exported function for factories\n\nexport function HttpLoaderFactory(http) {\n  return new TranslateHttpLoader(http, '/assets/i18n/', '.json');\n}\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [Title, ResolutionService, {\n      provide: MissingTranslationHandler,\n      useClass: AppMissingTranslationHandler\n    }, GithubUserProjectsService],\n    imports: [[BrowserModule, FormsModule, ReactiveFormsModule, BrowserAnimationsModule, HttpClientModule, TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }), AppRoutingModule, NgxSpinnerModule]]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}